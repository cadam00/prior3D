[{"path":"https://cadam00.github.io/prior3D/articles/Introduction.html","id":"introduction-to-the-prior3d-package-tutorial","dir":"Articles","previous_headings":"","what":"1 Introduction to the prior3D Package (tutorial)","title":"Introduction to prior3D","text":"prior3D package offers comprehensive toolset 3D systematic conservation planning, conducting nested prioritization analyses across multiple depth levels ensuring efficient resource allocation throughout water column (Doxa et al. 2022). provides structured workflow designed address biodiversity conservation management challenges 3 dimensions, incorporation multiple costs different depth levels, facilitating users’ choices parameterization. process initiates deepest level progressively moves toward surface, conducting step--step prioritization analysis depth Figure 1. optimization result depth level considered cost layer layer . approach gives priority areas chosen deeper waters selecting areas subsequent upper level, thus creating cascading prioritization structure. prior3D package built upon prioritizr package (Hanson et al. 2024), using commercial open-source exact algorithm solvers ensure optimal solutions prioritization problems. Figure 1: Flow chart 3D prioritization analysis four depth zones considered Doxa et al. (2022) analysis tutorial guide key functions package, data preparation generating informative outputs address conservation challenges diverse marine (terrestrial) ecosystems enable informed decision-making biodiversity conservation, restoration management.","code":""},{"path":"https://cadam00.github.io/prior3D/articles/Introduction.html","id":"workflow-running-the-analysis","dir":"Articles","previous_headings":"","what":"2 Workflow: Running the analysis","title":"Introduction to prior3D","text":"package provides two options conducting analyses: Running Step--Step 3D SCP analysis Running Comparative Analysis 2D 3D SCP approach opting step--step analysis (first option), workflow proceeds follows: Use split_rast() function convert 2D distribution rasters biodiversity features 3D format. Use prioritize_3D() function set optimization problem define parameters. function also solves problem provides solution form map. Use evaluate_3D() function obtain detailed results tabular format. Use plot_3D() function generate graphs based solution results. opting comparative analysis 2D 3D SCP approach (second option), users can use Compare_2D_3D() function. function incorporates aforementioned detailed workflow applies 2D 3D approaches, streamlining simplifying analysis process users. using function, users provide input data, define optimization problem parameterization, run analysis finally obtain results form maps, graphs tables. spatial coherence solution maps can evaluated post-processing analysis, can conducted either step--step comparative analysis. necessary functions assessment also provided within package.","code":""},{"path":"https://cadam00.github.io/prior3D/articles/Introduction.html","id":"illustration-example","dir":"Articles","previous_headings":"","what":"3 Illustration example","title":"Introduction to prior3D","text":"Let us consider following dataset illustrative example. represents subset species analyzed Doxa et al. (2022). simplicity reasons, included 20 species demonstration purposes. Biodiversity features Two types input data needed biodiversity features. Species information tables tabular form (data.frame). first data.frame contains information features. biodiversity features concern species data.frame must indicate least species name species classification pelagic benthic (mandatory). Additional optional data may include species assignment prioritization groups , available, species’ bathymetric range (min max depth species occurs). second data.frame prioritization weights table, users can assign specific weights different prioritization groups. groups can represent meaningful categorization prioritization process, like taxonomical, functional, conservation status categories, defined IUCN. Biodiversity distribution data 2D raster form. rasters contain information spatial distribution features across study area. Biodiversity distribution information can represent either presence-absence data (binary) continuous information, biomass/abundance, probability occurrences. Planning site, planning units depth levels illustration example, consider planning site Mediterranean Sea, 0.5°x0.5° cells planning unites (PUs). consider four depth levels: () 0 40 m (infralittoral zone, extending lower limit photophilic algae seagrasses), (ii) 40 200 m (circalittoral zone, continental shelf, animal-dominated), (iii) 200 2000 m (~continental slope), (iv) exceeding 2000 m depth (lower bathyal plains abyssal zone) (Figure 2). Figure 2: study area considered depth zones conduct analysis, SpatRaster object containing bathymetric data planning site needed. raster represent depths negative values match extent resolution biodiversity rasters. Alternatively, bathymetry maps greater resolution broader extent available, can also used, prior3D functions internally conduct cropping resampling match biodiversity data. Producing final depth raster delineates desired depth zones also produced prior3D functions.","code":"# Import prior3D R package library(prior3D)  # Species information table data(biodiv_df) head(biodiv_df) ##               species_name pelagic min_z max_z ## 1   acanthocybium_solandri       1   -20     0 ## 2    acantholabrus_palloni       0  -500   -30 ## 3 acanthomysis_longicornis       0  -100    -2 ## 4      abraliopsis_morisii       0 -3660     0 ## 5          abralia_veranyi       0  -900    -1 ## 6     abraliopsis_pfefferi       0  -750    -1 # Biodiversity distribution data in 2D raster form biodiv_raster <- get_biodiv_raster() biodiv_raster ## class       : SpatRaster  ## dimensions  : 31, 83, 20  (nrow, ncol, nlyr) ## resolution  : 0.5, 0.5  (x, y) ## extent      : -5.5, 36, 30.5, 46  (xmin, xmax, ymin, ymax) ## coord. ref. : lon/lat WGS 84 (EPSG:4326)  ## source      : biodiv_raster.tif  ## names       : aapto~aptos, abiet~etina, abra_alba, abral~ranyi, abral~risii, abral~fferi, ...  ## min values  :        0.01,        0.01,      0.01,        0.01,        0.01,        0.01, ...  ## max values  :        1.00,        0.63,      1.00,        1.00,        1.00,        1.00, ... # Biodiversity distribution data in 2D raster form depth_raster <- get_depth_raster() depth_raster ## class       : SpatRaster  ## dimensions  : 31, 83, 1  (nrow, ncol, nlyr) ## resolution  : 0.5, 0.5  (x, y) ## extent      : -5.5, 36, 30.5, 46  (xmin, xmax, ymin, ymax) ## coord. ref. : lon/lat WGS 84 (EPSG:4326)  ## source      : depth_raster.tif  ## name        : depth_raster  ## min value   :  -4082.70312  ## max value   :     -6.60191"},{"path":[]},{"path":"https://cadam00.github.io/prior3D/articles/Introduction.html","id":"step-1-data-preparation","dir":"Articles","previous_headings":"4 Step-by-Step 3D SCP analysis","what":"4.1 Step 1: Data Preparation","title":"Introduction to prior3D","text":"Transforming Biodiversity Distributions Multilevel (3D) Data split_rast() function used convert 2D distributions biodiversity features (rasters) 3D format. output list containing species distributions bathymetric layer, necessary analysis next steps.","code":"# Splitting features' 2D distributions into 3D ones split_features <- split_rast(biodiv_raster,                              depth_raster,                              breaks = c(0, -40, -200, -2000, -Inf),                              biodiv_df,                              val_depth_range=TRUE)"},{"path":"https://cadam00.github.io/prior3D/articles/Introduction.html","id":"step-2-3d-prioritization-algorithm","dir":"Articles","previous_headings":"4 Step-by-Step 3D SCP analysis","what":"4.2 Step 2: 3D Prioritization Algorithm","title":"Introduction to prior3D","text":"3D prioritization algorithm implemented using prioritize_3D() function, core function prior3D package. function uses list generated split_rast() function necessary inputs. Notes: budget_percent: Contrarily strict economic definition, budget reflects desired level protection modeled. ranges 0 1, 0 indicating resources available protection, 1 signifies resources sufficient protect entire study area. Typically, setting budget 0.3 corresponds 30% conservation target (.e. 30% total area set aside conservation). Users also flexibility define multiple budget levels using vector, allowing exploration various protection scenarios. instance, vector like c(0.1, 0.3, 0.5) represents three scenarios 10%, 30%, 50% study area designated protection. budget_weights: prioritize_3D() function allows users specify budget distributed among depth levels. Three allocation methods available: Equal Distribution: Allocates equal share budget depth level (budget_weights =\"equal\"). Proportional Area: Allocates budget based spatial extent depth level (budget_weights =\"area\"). Proportional Species Richness: Prioritizes budget allocation depth levels higher species diversity (number species). (budget_weights = \"richness\")","code":"single_3D <- prioritize_3D(split_features  = split_features,                            depth_raster    = depth_raster,                            breaks          = c(0, -40, -200, -2000, -Inf),                            biodiv_df       = biodiv_df,                            budget_percents = 0.3,                            budget_weights  = \"richness\",                            threads         = parallel::detectCores(),                            portfolio       = \"gap\",                            portfolio_opts  = list(number_solutions = 10)) ## [1] \"Budget: 0.3\""},{"path":"https://cadam00.github.io/prior3D/articles/Introduction.html","id":"step-3-generating-outputs","dir":"Articles","previous_headings":"4 Step-by-Step 3D SCP analysis","what":"4.3 Step 3: Generating Outputs","title":"Introduction to prior3D","text":"Prioritization Maps prioritize_3D() function used generate prioritization maps. Single budget settings (ex. total_budget=0.3) produce standard maps, typical Marxan outputs. Multiple budgets, using vector (ex. c(0.1,0.3,0.5), indicating available resources sufficient protect 10%, 30% 50% area) result cumulative maps, illustrating areas selected various budget levels. Although output follows different approach, resembles typical Zonation output maps. Figure 3: Prioritization maps single multiple budget percentages Figure 4: Output 30% budget percentage multiple budgets Figure 5: Output multiple budget percentages","code":"# Create plot of outputs for a single budget percentage plot_3D(single_3D, to_plot=\"all\") # Create plot of outputs for multiple budget percentages multuple_3D <- prioritize_3D(split_features  = split_features,                              depth_raster    = depth_raster,                              breaks          = c(0, -40, -200, -2000, -Inf),                              biodiv_df       = biodiv_df,                              budget_percents = seq(0,1,0.1),                              budget_weights  = \"richness\",                              threads         = parallel::detectCores(),                              portfolio       = \"gap\",                              portfolio_opts  = list(number_solutions = 10)) ## [1] \"Budget: 0\" ## Warning: Portfolio could only find 1 out of 10 solutions. ## Warning: Portfolio could only find 1 out of 10 solutions. ## Warning: Portfolio could only find 1 out of 10 solutions. ## Warning: Portfolio could only find 1 out of 10 solutions. ## [1] \"Budget: 0.1\" ## [1] \"Budget: 0.2\" ## [1] \"Budget: 0.3\" ## [1] \"Budget: 0.4\" ## [1] \"Budget: 0.5\" ## [1] \"Budget: 0.6\" ## [1] \"Budget: 0.7\" ## [1] \"Budget: 0.8\" ## [1] \"Budget: 0.9\" ## [1] \"Budget: 1\" ## Warning: Problem failed presolve checks. ##  ## These checks indicate that solutions might not identify meaningful priority ## areas: ##  ## ✖ Budget is greater than the total cost of selecting all planning units. ## → Maybe you made a mistake when setting the `budget` in the objective function? ##  ## ℹ For more information, see `presolve_check()`. plot_3D(multuple_3D)"},{"path":"https://cadam00.github.io/prior3D/articles/Introduction.html","id":"comparative-analysis-of-a-2d-and-a-3d-scp-approach","dir":"Articles","previous_headings":"","what":"5 Comparative Analysis of a 2D and a 3D SCP approach","title":"Introduction to prior3D","text":"facilitate comparisons 3D 2D approaches, compare_2D_3D() function provided package. function enables users conduct mentioned steps analysis (data generation, setting solving optimization problem producing outputs), executing 2D 3D approaches, similar settings, facilitate comparisons. function plot_Compare_2D_3D() generates corresponding maps graphs approaches. Figure 6: Comparison 2D vs 3D approach multiple budget percentages","code":"out_2D_3D <- Compare_2D_3D(biodiv_raster = biodiv_raster,                            depth_raster = depth_raster,                            breaks = c(0, -40, -200, -2000, -Inf),                            biodiv_df = biodiv_df,                            budget_percents = seq(0, 1, 0.1),                            budget_weights = \"richness\",                            threads = parallel::detectCores(),                            portfolio = \"gap\", #\"shuffle\"                            portfolio_opts = list(number_solutions = 10))  plot_Compare_2D_3D(out_2D_3D, to_plot=\"all\", add_lines=TRUE)"},{"path":"https://cadam00.github.io/prior3D/articles/Introduction.html","id":"spatial-coherence-metrics","dir":"Articles","previous_headings":"","what":"6 Spatial Coherence Metrics","title":"Introduction to prior3D","text":"spatial coherence prioritization output (optimization solution) maps assessed using three metrics: average surface roughness (SA), surface kurtosis (SKU), RAO index. can used comparison among solution 2D 3D solutions. High SA values signify high spatial heterogeneity, indicating lower spatial coherence. High SKU indicate high spatial coherence. SA SKU calculated using R package geodiv (Smith et al. 2023), applying geodiv::focal_metrics functions “sa” “sku” optimization solution rasters. High RAO values suggest increased spatial heterogeneity, thus low spatial coherence. compute RAO metric, moving window approach employed optimization solution maps, using function rasterdiv::paRao R package rasterdiv (Rocchini, Thouverai, et al. 2021; Rocchini, Marcantonio, et al. 2021). dimensions window chosen 3×3. new raster, result application algorithm, used get average RAO value whole raster. Figure 7: SA Figure 8: SKU Figure 9: RAO","code":"coherence(out_2D_3D, w=3) ## Progress metrics:  1 / 1 ## Progress metrics:  1 / 1 ##  sa2D  sa3D sa2Dw sa3Dw  ## 3.806 3.503 2.413 2.118 knitr::include_graphics(\"sa.jpg\") coherence(out_2D_3D, w=3, metric=\"sku\") ## Progress metrics:  1 / 1 ## Progress metrics:  1 / 1 ## sku2D  sku3D sku2Dw sku3Dw  ## 0.347  1.138 -0.536 -0.374 coherence(out_2D_3D, w=3, metric=\"rao\") ## [1] \"2D RAO\" ##  ##  ## Processing alpha: 1 Moving Window: 3 ##  ##  ## Processing alpha: 1 Moving Window: 3 ##  ## [============================>----------------]  64% in  0s ## [============================>----------------]  65% in  0s ## [=============================>---------------]  66% in  0s ## [=============================>---------------]  67% in  0s ## [==============================>--------------]  69% in  0s ## [==============================>--------------]  70% in  0s ## [===============================>-------------]  71% in  0s ## [================================>------------]  72% in  0s ## [================================>------------]  73% in  0s ## [=================================>-----------]  75% in  0s ## [=================================>-----------]  76% in  0s ## [==================================>----------]  77% in  0s ## [==================================>----------]  78% in  0s ## [===================================>---------]  80% in  0s ## [===================================>---------]  81% in  0s ## [====================================>--------]  82% in  0s ## [====================================>--------]  83% in  0s ## [=====================================>-------]  84% in  0s ## [=====================================>-------]  86% in  0s ## [======================================>------]  87% in  0s ## [=======================================>-----]  88% in  0s ## [=======================================>-----]  89% in  0s ## [========================================>----]  90% in  0s ## [========================================>----]  92% in  0s ## [=========================================>---]  93% in  0s ## [=========================================>---]  94% in  0s ## [==========================================>--]  95% in  0s ## [==========================================>--]  96% in  0s ## [===========================================>-]  98% in  0s ## [===========================================>-]  99% in  0s ## [=============================================] 100% in  0s ##  ## [1] \"3D RAO\" ##  ##  ## Processing alpha: 1 Moving Window: 3 ##  ##  ## Processing alpha: 1 Moving Window: 3 ##  ## [=============================>---------------]  67% in  0s ## [==============================>--------------]  69% in  0s ## [==============================>--------------]  70% in  0s ## [===============================>-------------]  71% in  0s ## [================================>------------]  72% in  0s ## [================================>------------]  73% in  0s ## [=================================>-----------]  75% in  0s ## [=================================>-----------]  76% in  0s ## [==================================>----------]  77% in  0s ## [==================================>----------]  78% in  0s ## [===================================>---------]  80% in  0s ## [===================================>---------]  81% in  0s ## [====================================>--------]  82% in  0s ## [====================================>--------]  83% in  0s ## [=====================================>-------]  84% in  0s ## [=====================================>-------]  86% in  0s ## [======================================>------]  87% in  0s ## [=======================================>-----]  88% in  0s ## [=======================================>-----]  89% in  0s ## [========================================>----]  90% in  0s ## [========================================>----]  92% in  0s ## [=========================================>---]  93% in  0s ## [=========================================>---]  94% in  0s ## [==========================================>--]  95% in  0s ## [==========================================>--]  96% in  0s ## [===========================================>-]  98% in  0s ## [===========================================>-]  99% in  0s ## [=============================================] 100% in  0s ##  ## $rao2D.mean ## [1] 1.872 ##  ## $rao3D.mean ## [1] 1.709 ##  ## Warning messages: ## 1: In rasterdiv::paRao(x = raster_data_2D, window = w, na.tolerance = 1,  : ##   Simplify=0. Rounding data to 0 decimal places. ## 2: In rasterdiv::paRao(x = raster_data_2D, window = w, na.tolerance = 1,  : ##   Input data are float numbers. Converting data to integer matrices. ## 3: In rasterdiv::paRao(x = raster_data_3D, window = w, na.tolerance = 1,  : ##   Simplify=0. Rounding data to 0 decimal places. ## 4: In rasterdiv::paRao(x = raster_data_3D, window = w, na.tolerance = 1,  : ##   Input data are float numbers. Converting data to integer matrices."},{"path":"https://cadam00.github.io/prior3D/articles/Introduction.html","id":"references","dir":"Articles","previous_headings":"","what":"7 References","title":"Introduction to prior3D","text":"Doxa, Aggeliki, Vasiliki Almpanidou, Stelios Katsanevakis, Ana M Queirós, Kristin Kaschner, Cristina Garilao, Kathleen Kesner-Reyes, Antonios D Mazaris. 2022. “4D marine conservation networks: Combining 3D prioritization present future biodiversity climatic refugia. Global Change Biology 28 (15): 4577–88. https://doi.org/10.1111/gcb.16268. Hanson, Jeffrey O, Richard Schuster, Nina Morrell, Matthew Strimas-Mackey, Brandon P M Edwards, Matthew E Watts, Peter Arcese, Joseph Bennett, Hugh P Possingham. 2024. prioritizr: Systematic Conservation Prioritization R. https://prioritizr.net. Rocchini, Duccio, Matteo Marcantonio, Daniele Da Re, Giovanni Bacaro, Enrico Feoli, Giles Foody, Reinhard Furrer, et al. 2021. “zero infinity: Minimum maximum diversity planet spatio-parametric Rao’s quadratic entropy.Global Ecology Biogeography 30 (5): 2315. https://doi.org/10.1111/geb.13270. Rocchini, Duccio, Elisa Thouverai, Matteo Marcantonio, Martina Iannacito, Daniele Da Re, Michele Torresani, Giovanni Bacaro, et al. 2021. “ rasterdiv - Information Theory tailored R package measuring ecosystem heterogeneity space: origin back.” Methods Ecology Evolution 12 (6): 2195. https://doi.org/10.1111/2041-210X.13583. Smith, Annie C., Phoebe Zarnetske, Kyla Dahlin, Adam Wilson, Andrew Latimer. 2023. Geodiv: Methods Calculating Gradient Surface Metrics. https://doi.org/10.32614/CRAN.package.geodiv.","code":""},{"path":"https://cadam00.github.io/prior3D/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Christos Adam. Author, maintainer. Nikolaos Nagkoulis. Author. Aggeliki Doxa. Author.","code":""},{"path":"https://cadam00.github.io/prior3D/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Adam C, Nagkoulis N, Doxa (2024). prior3D: 3D Prioritization Algorithm. R package version 0.1.1, https://cadam00.github.io/prior3D/, https://github.com/cadam00/prior3D.","code":"@Manual{,   title = {prior3D: 3D Prioritization Algorithm},   author = {Christos Adam and Nikolaos Nagkoulis and Aggeliki Doxa},   year = {2024},   note = {R package version 0.1.1, https://cadam00.github.io/prior3D/},   url = {https://github.com/cadam00/prior3D}, }"},{"path":"https://cadam00.github.io/prior3D/index.html","id":"id_1-introduction-to-the-prior3d-package-tutorial","dir":"","previous_headings":"","what":"1 Introduction to the prior3D Package (tutorial)","title":"3D Prioritization Algorithm","text":"prior3D package offers comprehensive toolset 3D systematic conservation planning, conducting nested prioritization analyses across multiple depth levels ensuring efficient resource allocation throughout water column (Doxa et al. 2022). provides structured workflow designed address biodiversity conservation management challenges 3 dimensions, incorporation multiple costs different depth levels, facilitating users’ choices parameterization. process initiates deepest level progressively moves toward surface, conducting step--step prioritization analysis depth Figure 1. optimization result depth level considered cost layer layer . approach gives priority areas chosen deeper waters selecting areas subsequent upper level, thus creating cascading prioritization structure. prior3D package built upon prioritizr package (Hanson et al. 2024), using commercial open-source exact algorithm solvers ensure optimal solutions prioritization problems.  Figure 1: Flow chart 3D prioritization analysis four depth zones considered Doxa et al. (2022) analysis tutorial guide key functions package, data preparation generating informative outputs address conservation challenges diverse marine (terrestrial) ecosystems enable informed decision-making biodiversity conservation, restoration management.","code":""},{"path":"https://cadam00.github.io/prior3D/index.html","id":"id_2-workflow-running-the-analysis","dir":"","previous_headings":"","what":"2 Workflow: Running the analysis","title":"3D Prioritization Algorithm","text":"package provides two options conducting analyses: Running Step--Step 3D SCP analysis Running Comparative Analysis 2D 3D SCP approach opting step--step analysis (first option), workflow proceeds follows: Use split_rast() function convert 2D distribution rasters biodiversity features 3D format. Use prioritize_3D() function set optimization problem define parameters. function also solves problem provides solution form map. Use evaluate_3D() function obtain detailed results tabular format. Use plot_3D() function generate graphs based solution results. opting comparative analysis 2D 3D SCP approach (second option), users can use Compare_2D_3D() function. function incorporates aforementioned detailed workflow applies 2D 3D approaches, streamlining simplifying analysis process users. using function, users provide input data, define optimization problem parameterization, run analysis finally obtain results form maps, graphs tables. spatial coherence solution maps can evaluated post-processing analysis, can conducted either step--step comparative analysis. necessary functions assessment also provided within package.","code":""},{"path":"https://cadam00.github.io/prior3D/index.html","id":"id_3-installation","dir":"","previous_headings":"","what":"3 Installation","title":"3D Prioritization Algorithm","text":"functions package prior3D can installed R via: Alternatively, development version package can installed using:","code":"install.packages(\"prior3D\") if (!require(remotes)) install.packages(\"remotes\") remotes::install_github(\"cadam00/prior3D\")"},{"path":"https://cadam00.github.io/prior3D/index.html","id":"id_4-illustration-example","dir":"","previous_headings":"","what":"4 Illustration example","title":"3D Prioritization Algorithm","text":"Let us consider following dataset illustrative example. represents subset species analyzed Doxa et al. (2022). simplicity reasons, included 20 species demonstration purposes. Biodiversity features Two types input data needed biodiversity features. Species information tables tabular form (data.frame). first data.frame contains information features. biodiversity features concern species data.frame must indicate least species name species classification pelagic benthic (mandatory). Additional optional data may include species assignment prioritization groups , available, species’ bathymetric range (min max depth species occurs). second data.frame prioritization weights table, users can assign specific weights different prioritization groups. groups can represent meaningful categorization prioritization process, like taxonomical, functional, conservation status categories, defined IUCN. Biodiversity distribution data 2D raster form. rasters contain information spatial distribution features across study area. Biodiversity distribution information can represent either presence-absence data (binary) continuous information, biomass/abundance, probability occurrences. Planning site, planning units depth levels illustration example, consider planning site Mediterranean Sea, 0.5°x0.5° cells planning unites (PUs). consider four depth levels: () 0 40 m (infralittoral zone, extending lower limit photophilic algae seagrasses), (ii) 40 200 m (circalittoral zone, continental shelf, animal-dominated), (iii) 200 2000 m (~continental slope), (iv) exceeding 2000 m depth (lower bathyal plains abyssal zone) (Figure 2).  Figure 2: study area considered depth zones conduct analysis, SpatRaster object containing bathymetric data planning site needed. raster represent depths negative values match extent resolution biodiversity rasters. Alternatively, bathymetry maps greater resolution broader extent available, can also used, prior3D functions internally conduct cropping resampling match biodiversity data. Producing final depth raster delineates desired depth zones also produced prior3D functions.","code":"# Import prior3D R package library(prior3D)  # Species information table data(biodiv_df) head(biodiv_df) ##               species_name pelagic min_z max_z ## 1   acanthocybium_solandri       1   -20     0 ## 2    acantholabrus_palloni       0  -500   -30 ## 3 acanthomysis_longicornis       0  -100    -2 ## 4      abraliopsis_morisii       0 -3660     0 ## 5          abralia_veranyi       0  -900    -1 ## 6     abraliopsis_pfefferi       0  -750    -1 # Biodiversity distribution data in 2D raster form biodiv_raster <- get_biodiv_raster() biodiv_raster ## class       : SpatRaster  ## dimensions  : 31, 83, 20  (nrow, ncol, nlyr) ## resolution  : 0.5, 0.5  (x, y) ## extent      : -5.5, 36, 30.5, 46  (xmin, xmax, ymin, ymax) ## coord. ref. : lon/lat WGS 84 (EPSG:4326)  ## source      : biodiv_raster.tif  ## names       : aapto~aptos, abiet~etina, abra_alba, abral~ranyi, abral~risii, abral~fferi, ...  ## min values  :        0.01,        0.01,      0.01,        0.01,        0.01,        0.01, ...  ## max values  :        1.00,        0.63,      1.00,        1.00,        1.00,        1.00, ... # Biodiversity distribution data in 2D raster form depth_raster <- get_depth_raster() depth_raster ## class       : SpatRaster  ## dimensions  : 31, 83, 1  (nrow, ncol, nlyr) ## resolution  : 0.5, 0.5  (x, y) ## extent      : -5.5, 36, 30.5, 46  (xmin, xmax, ymin, ymax) ## coord. ref. : lon/lat WGS 84 (EPSG:4326)  ## source      : depth_raster.tif  ## name        : depth_raster  ## min value   :  -4082.70312  ## max value   :     -6.60191"},{"path":[]},{"path":"https://cadam00.github.io/prior3D/index.html","id":"id_51-step-1-data-preparation","dir":"","previous_headings":"5 Step-by-Step 3D SCP analysis","what":"5.1 Step 1: Data Preparation","title":"3D Prioritization Algorithm","text":"Transforming Biodiversity Distributions Multilevel (3D) Data split_rast() function used convert 2D distributions biodiversity features (rasters) 3D format. output list containing species distributions bathymetric layer, necessary analysis next steps.","code":"# Splitting features' 2D distributions into 3D ones split_features <- split_rast(biodiv_raster,                              depth_raster,                              breaks = c(0, -40, -200, -2000, -Inf),                              biodiv_df,                              val_depth_range=TRUE)"},{"path":"https://cadam00.github.io/prior3D/index.html","id":"id_52-step-2-3d-prioritization-algorithm","dir":"","previous_headings":"5 Step-by-Step 3D SCP analysis","what":"5.2 Step 2: 3D Prioritization Algorithm","title":"3D Prioritization Algorithm","text":"3D prioritization algorithm implemented using prioritize_3D() function, core function prior3D package. function uses list generated split_rast() function necessary inputs. Notes: budget_percent: Contrarily strict economic definition, budget reflects desired level protection modeled. ranges 0 1, 0 indicating resources available protection, 1 signifies resources sufficient protect entire study area. Typically, setting budget 0.3 corresponds 30% conservation target (.e. 30% total area set aside conservation). Users also flexibility define multiple budget levels using vector, allowing exploration various protection scenarios. instance, vector like c(0.1, 0.3, 0.5) represents three scenarios 10%, 30%, 50% study area designated protection. budget_weights: prioritize_3D() function allows users specify budget distributed among depth levels. Three allocation methods available: Equal Distribution: Allocates equal share budget depth level (budget_weights =\"equal\"). Proportional Area: Allocates budget based spatial extent depth level (budget_weights =\"area\"). Proportional Species Richness: Prioritizes budget allocation depth levels higher species diversity (number species). (budget_weights = \"richness\")","code":"single_3D <- prioritize_3D(split_features  = split_features,                            depth_raster    = depth_raster,                            breaks          = c(0, -40, -200, -2000, -Inf),                            biodiv_df       = biodiv_df,                            budget_percents = 0.3,                            budget_weights  = \"richness\",                            threads         = parallel::detectCores(),                            portfolio       = \"gap\", #\"shuffle\"                            portfolio_opts  = list(number_solutions = 10)) ## [1] \"Budget: 0.3\""},{"path":"https://cadam00.github.io/prior3D/index.html","id":"id_53-step-3-generating-outputs","dir":"","previous_headings":"5 Step-by-Step 3D SCP analysis","what":"5.3 Step 3: Generating Outputs","title":"3D Prioritization Algorithm","text":"Prioritization Maps prioritize_3D() function used generate prioritization maps. Single budget settings (ex. total_budget=0.3) produce standard maps, typical Marxan outputs. Multiple budgets, using vector (ex. c(0.1,0.3,0.5), indicating available resources sufficient protect 10%, 30% 50% area) result cumulative maps, illustrating areas selected various budget levels. Although output follows different approach, resembles typical Zonation output maps.  Figure 3: Prioritization maps single multiple budget percentages  Figure 4: Output 30% budget percentage multiple budgets  Figure 5: Output multiple budget percentages","code":"# Create plot of outputs for a single budget percentage plot_3D(single_3D, to_plot=\"all\", add_lines=FALSE) # Create plot of outputs for multiple budget percentages multuple_3D <- prioritize_3D(split_features  = split_features,                              depth_raster    = depth_raster,                              breaks          = c(0, -40, -200, -2000, -Inf),                              biodiv_df       = biodiv_df,                              budget_percents = seq(0,1,0.1),                              budget_weights  = \"richness\",                              threads         = parallel::detectCores(),                              portfolio       = \"gap\",                              portfolio_opts  = list(number_solutions = 10)) ## [1] \"Budget: 0\" ## Warning: Portfolio could only find 1 out of 10 solutions. ## Warning: Portfolio could only find 1 out of 10 solutions. ## Warning: Portfolio could only find 1 out of 10 solutions. ## Warning: Portfolio could only find 1 out of 10 solutions. ## [1] \"Budget: 0.1\" ## [1] \"Budget: 0.2\" ## [1] \"Budget: 0.3\" ## [1] \"Budget: 0.4\" ## [1] \"Budget: 0.5\" ## [1] \"Budget: 0.6\" ## [1] \"Budget: 0.7\" ## [1] \"Budget: 0.8\" ## [1] \"Budget: 0.9\" ## [1] \"Budget: 1\" ## Warning: Problem failed presolve checks. ##  ## These checks indicate that solutions might not identify meaningful priority ## areas: ##  ## ✖ Budget is greater than the total cost of selecting all planning units. ## → Maybe you made a mistake when setting the `budget` in the objective function? ##  ## ℹ For more information, see `presolve_check()`. plot_3D(multuple_3D)"},{"path":"https://cadam00.github.io/prior3D/index.html","id":"id_6-comparative-analysis-of-a-2d-and-a-3d-scp-approach","dir":"","previous_headings":"","what":"6 Comparative Analysis of a 2D and a 3D SCP approach","title":"3D Prioritization Algorithm","text":"facilitate comparisons 3D 2D approaches, compare_2D_3D() function provided package. function enables users conduct mentioned steps analysis (data generation, setting solving optimization problem producing outputs), executing 2D 3D approaches, similar settings, facilitate comparisons. function plot_Compare_2D_3D() generates corresponding maps graphs approaches.  Figure 6: Comparison 2D vs 3D approach multiple budget percentages","code":"out_2D_3D <- Compare_2D_3D(biodiv_raster = biodiv_raster,                            depth_raster = depth_raster,                            breaks = c(0, -40, -200, -2000, -Inf),                            biodiv_df = biodiv_df,                            budget_percents = seq(0, 1, 0.1),                            budget_weights = \"richness\",                            threads = parallel::detectCores(),                            portfolio = \"gap\", #\"shuffle\"                            portfolio_opts = list(number_solutions = 10))  plot_Compare_2D_3D(out_2D_3D, to_plot=\"all\", add_lines=TRUE)"},{"path":"https://cadam00.github.io/prior3D/index.html","id":"id_7-spatial-coherence-metrics","dir":"","previous_headings":"","what":"7 Spatial Coherence Metrics","title":"3D Prioritization Algorithm","text":"spatial coherence prioritization output (optimization solution) maps assessed using three metrics: average surface roughness (SA), surface kurtosis (SKU), RAO index. can used comparison among solution 2D 3D solutions. High SA values signify high spatial heterogeneity, indicating lower spatial coherence. High SKU indicate high spatial coherence. SA SKU calculated using R package geodiv (Smith et al. 2023), applying geodiv::focal_metrics functions “sa” “sku” optimization solution rasters. High RAO values suggest increased spatial heterogeneity, thus low spatial coherence. compute RAO metric, moving window approach employed optimization solution maps, using function rasterdiv::paRao R package rasterdiv (Rocchini, Thouverai, et al. 2021; Rocchini, Marcantonio, et al. 2021). dimensions window chosen 3×3. new raster, result application algorithm, used get average RAO value whole raster.  Figure 7: SA  Figure 8: SKU  Figure 9: RAO","code":"coherence(out_2D_3D, w=3) ## Progress metrics:  1 / 1 ## Progress metrics:  1 / 1 ##  sa2D  sa3D sa2Dw sa3Dw  ## 3.806 3.503 2.413 2.118 coherence(out_2D_3D, w=3, metric=\"sku\") ## Progress metrics:  1 / 1 ## Progress metrics:  1 / 1 ## sku2D  sku3D sku2Dw sku3Dw  ## 0.347  1.138 -0.536 -0.374 coherence(out_2D_3D, w=3, metric=\"rao\") ## [1] \"2D RAO\" ##  ##  ## Processing alpha: 1 Moving Window: 3 ##  ##  ## Processing alpha: 1 Moving Window: 3 ##  ## [============================>----------------]  64% in  0s ## [============================>----------------]  65% in  0s ## [=============================>---------------]  66% in  0s ## [=============================>---------------]  67% in  0s ## [==============================>--------------]  69% in  0s ## [==============================>--------------]  70% in  0s ## [===============================>-------------]  71% in  0s ## [================================>------------]  72% in  0s ## [================================>------------]  73% in  0s ## [=================================>-----------]  75% in  0s ## [=================================>-----------]  76% in  0s ## [==================================>----------]  77% in  0s ## [==================================>----------]  78% in  0s ## [===================================>---------]  80% in  0s ## [===================================>---------]  81% in  0s ## [====================================>--------]  82% in  0s ## [====================================>--------]  83% in  0s ## [=====================================>-------]  84% in  0s ## [=====================================>-------]  86% in  0s ## [======================================>------]  87% in  0s ## [=======================================>-----]  88% in  0s ## [=======================================>-----]  89% in  0s ## [========================================>----]  90% in  0s ## [========================================>----]  92% in  0s ## [=========================================>---]  93% in  0s ## [=========================================>---]  94% in  0s ## [==========================================>--]  95% in  0s ## [==========================================>--]  96% in  0s ## [===========================================>-]  98% in  0s ## [===========================================>-]  99% in  0s ## [=============================================] 100% in  0s ##  ## [1] \"3D RAO\" ##  ##  ## Processing alpha: 1 Moving Window: 3 ##  ##  ## Processing alpha: 1 Moving Window: 3 ##  ## [=============================>---------------]  67% in  0s ## [==============================>--------------]  69% in  0s ## [==============================>--------------]  70% in  0s ## [===============================>-------------]  71% in  0s ## [================================>------------]  72% in  0s ## [================================>------------]  73% in  0s ## [=================================>-----------]  75% in  0s ## [=================================>-----------]  76% in  0s ## [==================================>----------]  77% in  0s ## [==================================>----------]  78% in  0s ## [===================================>---------]  80% in  0s ## [===================================>---------]  81% in  0s ## [====================================>--------]  82% in  0s ## [====================================>--------]  83% in  0s ## [=====================================>-------]  84% in  0s ## [=====================================>-------]  86% in  0s ## [======================================>------]  87% in  0s ## [=======================================>-----]  88% in  0s ## [=======================================>-----]  89% in  0s ## [========================================>----]  90% in  0s ## [========================================>----]  92% in  0s ## [=========================================>---]  93% in  0s ## [=========================================>---]  94% in  0s ## [==========================================>--]  95% in  0s ## [==========================================>--]  96% in  0s ## [===========================================>-]  98% in  0s ## [===========================================>-]  99% in  0s ## [=============================================] 100% in  0s ##  ## $rao2D.mean ## [1] 1.872 ##  ## $rao3D.mean ## [1] 1.709 ##  ## Warning messages: ## 1: In rasterdiv::paRao(x = raster_data_2D, window = w, na.tolerance = 1,  : ##   Simplify=0. Rounding data to 0 decimal places. ## 2: In rasterdiv::paRao(x = raster_data_2D, window = w, na.tolerance = 1,  : ##   Input data are float numbers. Converting data to integer matrices. ## 3: In rasterdiv::paRao(x = raster_data_3D, window = w, na.tolerance = 1,  : ##   Simplify=0. Rounding data to 0 decimal places. ## 4: In rasterdiv::paRao(x = raster_data_3D, window = w, na.tolerance = 1,  : ##   Input data are float numbers. Converting data to integer matrices."},{"path":"https://cadam00.github.io/prior3D/index.html","id":"id_8-references","dir":"","previous_headings":"","what":"8 References","title":"3D Prioritization Algorithm","text":"Doxa, Aggeliki, Vasiliki Almpanidou, Stelios Katsanevakis, Ana M Queirós, Kristin Kaschner, Cristina Garilao, Kathleen Kesner-Reyes, Antonios D Mazaris. 2022. “4D marine conservation networks: Combining 3D prioritization present future biodiversity climatic refugia.” Global Change Biology 28 (15): 4577–88. https://doi.org/10.1111/gcb.16268. Hanson, Jeffrey O, Richard Schuster, Nina Morrell, Matthew Strimas-Mackey, Brandon P M Edwards, Matthew E Watts, Peter Arcese, Joseph Bennett, Hugh P Possingham. 2024. prioritizr: Systematic Conservation Prioritization R. https://prioritizr.net. Rocchini, Duccio, Matteo Marcantonio, Daniele Da Re, Giovanni Bacaro, Enrico Feoli, Giles Foody, Reinhard Furrer, et al. 2021. “zero infinity: Minimum maximum diversity planet spatio-parametric Rao’s quadratic entropy.” Global Ecology Biogeography 30 (5): 2315. https://doi.org/10.1111/geb.13270. Rocchini, Duccio, Elisa Thouverai, Matteo Marcantonio, Martina Iannacito, Daniele Da Re, Michele Torresani, Giovanni Bacaro, et al. 2021. “ rasterdiv - Information Theory tailored R package measuring ecosystem heterogeneity space: origin back.” Methods Ecology Evolution 12 (6): 2195. https://doi.org/10.1111/2041-210X.13583. Smith, Annie C., Phoebe Zarnetske, Kyla Dahlin, Adam Wilson, Andrew Latimer. 2023. Geodiv: Methods Calculating Gradient Surface Metrics. https://doi.org/10.32614/CRAN.package.geodiv","code":""},{"path":"https://cadam00.github.io/prior3D/reference/biodiv_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Example biodiversity data.frame — biodiv_df","title":"Example biodiversity data.frame — biodiv_df","text":"Example biodiversity data.frame","code":""},{"path":"https://cadam00.github.io/prior3D/reference/biodiv_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example biodiversity data.frame — biodiv_df","text":"","code":"data(biodiv_df)"},{"path":"https://cadam00.github.io/prior3D/reference/biodiv_df.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Example biodiversity data.frame — biodiv_df","text":"Example input biodiv_df used functions.","code":""},{"path":"https://cadam00.github.io/prior3D/reference/biodiv_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Example biodiversity data.frame — biodiv_df","text":"data.frame object information features.","code":""},{"path":"https://cadam00.github.io/prior3D/reference/biodiv_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example biodiversity data.frame — biodiv_df","text":"","code":"data(biodiv_df) head(biodiv_df) #>               species_name pelagic min_z max_z #> 1   acanthocybium_solandri       1   -20     0 #> 2    acantholabrus_palloni       0  -500   -30 #> 3 acanthomysis_longicornis       0  -100    -2 #> 4      abraliopsis_morisii       0 -3660     0 #> 5          abralia_veranyi       0  -900    -1 #> 6     abraliopsis_pfefferi       0  -750    -1"},{"path":"https://cadam00.github.io/prior3D/reference/coherence.html","id":null,"dir":"Reference","previous_headings":"","what":"Coherence metrics — coherence","title":"Coherence metrics — coherence","text":"Coherence metrics","code":""},{"path":"https://cadam00.github.io/prior3D/reference/coherence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coherence metrics — coherence","text":"","code":"coherence(x, w, metric = \"sa\", normalize = TRUE, plot = TRUE, addlines = TRUE, ...)"},{"path":"https://cadam00.github.io/prior3D/reference/coherence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coherence metrics — coherence","text":"x Output Compare_2D_3D function. w Integer indicating square window dimensions. metric Cohension metric use. must one \"sa\", \"sku\" \"rao\" normalize TRUE, sum solutions normalized \\([0,1]\\) scale. plot TRUE, coherence maps ploted. addlines TRUE, border lines maps::map ploted. ... arguments passed function, based metric choice. See Details.","code":""},{"path":"https://cadam00.github.io/prior3D/reference/coherence.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Coherence metrics — coherence","text":"\"sa\" \"sku\" derived geodiv::focal_metrics ellipsis (...) arguments geodiv::focal_metrics  passed. metric = \"rao\" derived rasterdiv::paRao ellipsis (...) arguments rasterdiv::paRao passed.","code":""},{"path":"https://cadam00.github.io/prior3D/reference/coherence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coherence metrics — coherence","text":"numeric vector 2D 3D metrics. result maps optionally ploted.","code":""},{"path":"https://cadam00.github.io/prior3D/reference/coherence.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Coherence metrics — coherence","text":"Rocchini, Duccio, Matteo Marcantonio, Daniele Da Re, Giovanni Bacaro, Enrico Feoli, Giles Foody, Reinhard Furrer, et al. 2021. \"zero infinity: Minimum maximum diversity planet spatio-parametric Rao’s quadratic entropy.\" Global Ecology Biogeography 30 (5): 2315. doi:10.1111/geb.13270 . Rocchini, Duccio, Elisa Thouverai, Matteo Marcantonio, Martina Iannacito, Daniele Da Re, Michele Torresani, Giovanni Bacaro, et al. 2021. \"rasterdiv - Information Theory tailored R package measuring ecosystem heterogeneity space: origin back.\" Methods Ecology Evolution 12 (6): 2195. doi:10.1111/2041-210X.13583 . Smith, Annie C., Phoebe Zarnetske, Kyla Dahlin, Adam Wilson, Andrew Latimer. 2023. Geodiv: Methods Calculating Gradient Surface Metrics.  https://CRAN.R-project.org/package=geodiv. Becker OScbRA, Minka ARWRvbRBEbTP, Deckmyn. (2023). maps: Draw Geographical Maps. R package version 3.4.2,  https://CRAN.R-project.org/package=maps","code":""},{"path":[]},{"path":"https://cadam00.github.io/prior3D/reference/coherence.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coherence metrics — coherence","text":"","code":"if (FALSE) { # \\dontrun{ ## This example requires commercial solver from 'gurobi' package for ## portfolio = \"gap\". Else replace it with e.g. portfolio = \"shuffle\" for using ## a free solver like the one from 'highs' package.  biodiv_raster <- get_biodiv_raster() depth_raster <- get_depth_raster() data(biodiv_df)  out_2D_3D <- Compare_2D_3D(biodiv_raster = biodiv_raster,                            depth_raster = depth_raster,                            breaks = c(0, -40, -200, -2000, -Inf),                            biodiv_df = biodiv_df,                            budget_percents = seq(0, 1, 0.1),                            budget_weights = \"richness\",                            threads = parallel::detectCores(),                            portfolio = \"gap\",                            portfolio_opts = list(number_solutions = 10))  coherence(out_2D_3D, w = 3, metric = \"sa\") coherence(out_2D_3D, w = 3, metric = \"sku\") coherence(out_2D_3D, w = 3, metric = \"rao\") } # }"},{"path":"https://cadam00.github.io/prior3D/reference/Compare_2D_3D.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare 2D vs 3D prioritization algorithms — Compare_2D_3D","title":"Compare 2D vs 3D prioritization algorithms — Compare_2D_3D","text":"Compare 2D vs 3D prioritization algorithms","code":""},{"path":"https://cadam00.github.io/prior3D/reference/Compare_2D_3D.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare 2D vs 3D prioritization algorithms — Compare_2D_3D","text":"","code":"Compare_2D_3D(biodiv_raster, depth_raster, breaks, biodiv_df, val_depth_range = TRUE, priority_weights = NULL, budget_percents = seq(0,1,0.1), budget_weights = \"equal\", penalty = 0, edge_factor = 0.5, gap = 0.1, threads = 1L, sep_priority_weights = \",\", portfolio = \"gap\", portfolio_opts = list(number_solutions = 10, pool_gap = 0.1), sep_biodiv_df = \",\", locked_in_raster = NULL, locked_out_raster = NULL, verbose = FALSE)"},{"path":"https://cadam00.github.io/prior3D/reference/Compare_2D_3D.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare 2D vs 3D prioritization algorithms — Compare_2D_3D","text":"biodiv_raster SpatRaster object folder path 2D feature distributions layers. depth_raster SpatRaster object file path elevation/bathymetric map. breaks Numeric vector defining range depth layers use. biodiv_df data.frame file path (CSV, TXT, XLS, XLSX) containing additional information biodiversity features. val_depth_range correction splitted 3D distributions based depth range biodiversity features (\"min_z\" \"max_z\" biodiv_df) needed. priority_weights data.frame object file path (CSV, TXT, XLS, XLSX) containing group names biodiversity features first column corresponding group weights second column. data.frame attributes distinct prioritization weights different biodiversity features groups features. budget_percents Numeric value \\([0,1]\\) vector containing budget percentages use. default seq(0,1,0.1). budget_weights Numeric weight vector budget_percents allocation among depth levels. Otherwise can string one choices \"equal\", \"area\" \"richness\". Alternatively, can numerical vector custom weights corresponding depth layer, first value corresponds surface last one corresponds bottom sea. weights normalized sum exceeds 1. specified, equal distribution budget among depth levels used, default. penalty Numeric penalty applied depth zone, defined theprioritizr::add_boundary_penalties. edge_factor Numeric edge factor applied depth zone, defined theprioritizr::add_boundary_penalties. gap optimality gap solver, defined prioritizr package. default gap 0.1. threads number solver threads used. default 1. sep_priority_weights Separator used priority_weights file, priority_weights path format. portfolio portfolio used, choosing \"extra\", \"gap\", \"cuts\" \"shuffle\" portfolios. default \"gap\". portfolio=\"\" indicates portfolio used. portfolios see prioritizr. portfolio_opts prioritizr portfolio options used. sep_biodiv_df Separator used biodiv_df file, biodiv_df path format. locked_in_raster optional locked_in_raster SpatRaster used. Note areas considered zero-cost. locked_out_raster optional locked_out_raster SpatRaster used. Note areas excluded solution. verbose verbose = TRUE, solver messages printed well. default FALSE.","code":""},{"path":"https://cadam00.github.io/prior3D/reference/Compare_2D_3D.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compare 2D vs 3D prioritization algorithms — Compare_2D_3D","text":"facilitate comparisons 3D 2D approaches, compare_2D_3D() function provided package. function enables users conduct steps analysis (data generation, setting solving optimization problem producing outputs), executing 2D 3D approaches, similar settings, facilitate comparisons.  function generates corresponding maps graphs approaches. split_rast function used convert 2D distributions biodiversity features (rasters) 3D format. biodiv_df can following column names (independently order names ignored): \"species_name\": Mandatory column feature names, must biodiv_raster. \"pelagic\": Mandatory column features' behaviour. TRUE means feature pelagic FALSE means feature benthic. \"min_z\": Optional column minimum vertical range features. NA values translated unlimited upward feature movement. \"max_z\": Optional column maximum vertical range features. NA values translated unlimited downward feature movement. \"group\": Optional column group weights names. Except biodiv_df, additional data.frame object can also used defining group weights, named priority_weights. used, data.frame object must two columns: \"group\": Mandatory column group weights names. \"weight\": Mandatory column group weights. case feature weights desired, priority_weights can kept NULL. breaks must correspondence depth_raster file. example, depth_raster range \\([10, -3000]\\), breaks vector c(0,-40,-200,-2000,-Inf) create depth levels \\([0,-40],\\\\(-40,-200], (-200, -2000], (-2000, -\\infty)\\) set NA cells values greater \\(0\\). val_depth_range = TRUE (default), correction done depth range biodiversity features derived corresponding feature distribution raster \"min_z\" \"max_z\" ignored. val_depth_range = FALSE, function uses minimum maximum depth information provided biodiv_df, remove feature occurrences outside expected range. budget_percents: Budget reflects desired level protection modeled. ranges 0 1, 0 indicating resources available protection, 1 signifies resources sufficient protect entire study area. Typically, setting budget 0.3 corresponds 30% conservation target (.e. 30% total area set aside conservation). Users also flexibility define multiple budget levels using vector, allowing exploration various protection scenarios. instance, vector like c(0.1, 0.3, 0.5) represents three scenarios 10%, 30%, 50% study area designated protection. budget_weights: Compare_2D_3D function allows users specify budget distributed among depth levels. Three allocation methods available: Equal Distribution: Allocates equal share budget depth level (budget_weights = \"equal\"). Proportional Area: Allocates budget based spatial extent depth level (budget_weights = \"area\"). Proportional Species Richness: Prioritizes budget allocation depth levels higher species diversity (number species). (budget_weights = \"richness\") Otherwise, can numeric vector length equal number depth levels, number indicates budget share per depth level. solver used solving prioritization problems best available computer, following solver hierarchy prioritizr.","code":""},{"path":"https://cadam00.github.io/prior3D/reference/Compare_2D_3D.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare 2D vs 3D prioritization algorithms — Compare_2D_3D","text":"list containing following objects (non-referenced identical input ones): split_features: output split_rast solution3D: list 3D solution per budget percentage absolute_held3D: absolute_held 3D solutions (see evaluate_3D) overall_held3D: overall_held 3D solutions (see evaluate_3D) relative_helds3D: relative_held 3D solutions (see evaluate_3D) mean_overall_helds3D: base::mean overall_held 3D solution (see evaluate_3D) per budget sd_overall_helds3D: stats::sd overall_held 3D solution (see evaluate_3D) per budget depth_overall_available3D: depth_overall_available 3D solutions (see evaluate_3D) solution2D: list 2D solution per budget percentage absolute_held2D: absolute_held 3D solutions (see evaluate_3D) overall_held2D: overall_held 2D solutions (see evaluate_3D) relative_helds2D: relative_held 2D solutions (see evaluate_3D) mean_overall_helds2D: base::mean overall_held 2D solution (see evaluate_3D) per budget sd_overall_helds2D: stats::sd overall_held 2D solution (see evaluate_3D) per budget depth_overall_available2D: depth_overall_available 2D solutions (see evaluate_3D) names_features: names features used total_amount: total_amount features used (see evaluate_3D) overall_total_amount: overal_total_amount names features used (see evaluate_3D) jaccard_coef: terra_jaccard per pair 2D 3D solutions, given budget depth_levels_names: Depth levels names biodiv_raster: biodiv_raster used, cleaning biodiv_df: biodiv_df used cleaning","code":""},{"path":"https://cadam00.github.io/prior3D/reference/Compare_2D_3D.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compare 2D vs 3D prioritization algorithms — Compare_2D_3D","text":"Hanson, Jeffrey O, Richard Schuster, Nina Morrell, Matthew Strimas-Mackey, Brandon P M Edwards, Matthew E Watts, Peter Arcese, Joseph Bennett, Hugh P Possingham. 2024. prioritizr: Systematic Conservation Prioritization R.  https://prioritizr.net. Lehtomäki, Joona (2016). Comparing prioritization methods, 21 June. Available :  https://rpubs.com/jlehtoma/priocomp (Accessed 1 June 2024).","code":""},{"path":[]},{"path":"https://cadam00.github.io/prior3D/reference/Compare_2D_3D.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare 2D vs 3D prioritization algorithms — Compare_2D_3D","text":"","code":"if (FALSE) { # \\dontrun{ ## This example requires commercial solver from 'gurobi' package for ## portfolio = \"gap\". Else replace it with e.g. portfolio = \"shuffle\" for using ## a free solver like the one from 'highs' package.  biodiv_raster <- get_biodiv_raster() depth_raster <- get_depth_raster() data(biodiv_df)  out_2D_3D <- Compare_2D_3D(biodiv_raster = biodiv_raster,                            depth_raster = depth_raster,                            breaks = c(0, -40, -200, -2000, -Inf),                            biodiv_df = biodiv_df,                            budget_percents = seq(0, 1, 0.1),                            budget_weights = \"richness\",                            threads = parallel::detectCores(),                            portfolio = \"gap\",                            portfolio_opts = list(number_solutions = 10))  plot_Compare_2D_3D(out_2D_3D, to_plot = \"all\", add_lines=TRUE)  # Arbitrary random weights priority_weights <- data.frame(c(\"A\", \"B\", \"C\"), c(0.001, 1000, 1)) names(priority_weights) <- c(\"group\", \"weight\") biodiv_df$group <- rep(c(\"A\", \"B\", \"C\"), length.out=20) out_2D_3D <- Compare_2D_3D(biodiv_raster = biodiv_raster,                            depth_raster = depth_raster,                            breaks = c(0, -40, -200, -2000, -Inf),                            biodiv_df = biodiv_df,                            priority_weights = priority_weights,                            budget_percents = seq(0, 1, 0.1),                            budget_weights = \"richness\",                            threads = parallel::detectCores(),                            portfolio = \"gap\",                            portfolio_opts = list(number_solutions = 10))  plot_Compare_2D_3D(out_2D_3D, to_plot = \"all\", add_lines=TRUE) } # }"},{"path":"https://cadam00.github.io/prior3D/reference/evaluate_3D.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate prioritization solution over 3D feature distributions — evaluate_3D","title":"Evaluate prioritization solution over 3D feature distributions — evaluate_3D","text":"Evaluate prioritization solution 3D feature distributions.","code":""},{"path":"https://cadam00.github.io/prior3D/reference/evaluate_3D.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate prioritization solution over 3D feature distributions — evaluate_3D","text":"","code":"evaluate_3D(solution, split_features)"},{"path":"https://cadam00.github.io/prior3D/reference/evaluate_3D.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate prioritization solution over 3D feature distributions — evaluate_3D","text":"solution prioritization solution SpatRaster object. split_features list SpatRaster objects representing depth zones, element corresponds different depth level, ranging surface bottom sea. function uses output split_rast function, multilevel (3D) distribution data conform structure also acceptable. First list element corresponds shallowest distribution last list element deepest one.","code":""},{"path":"https://cadam00.github.io/prior3D/reference/evaluate_3D.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Evaluate prioritization solution over 3D feature distributions — evaluate_3D","text":"function evaluates prioritization solution 3D feature distributions, estimating relative overall percentages features protection, designated prioritization solution.","code":""},{"path":"https://cadam00.github.io/prior3D/reference/evaluate_3D.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate prioritization solution over 3D feature distributions — evaluate_3D","text":"list containing following evaluation metrics: relative_held_raw: relative percentage protection per feature per depth level relative_held: mean percentage protection features per depth level overall_held: overall percentage protection per feature overall_available: relative percentage protection per feature per depth level, total amount feature depth_overall_available: averages overall_available per depth absolute_held: absolute value per feature per depth protection total_amount: absolute value per feature depth level","code":""},{"path":"https://cadam00.github.io/prior3D/reference/evaluate_3D.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluate prioritization solution over 3D feature distributions — evaluate_3D","text":"","code":"if (FALSE) { # \\dontrun{ ## This example requires commercial solver from 'gurobi' package for ## portfolio = \"gap\". Else replace it with e.g. portfolio = \"shuffle\" for using ## a free solver like the one from 'highs' package.  biodiv_raster <- get_biodiv_raster() depth_raster <- get_depth_raster() data(biodiv_df)  # You can split features' 2D distributions into 3D ones and then run only 3D analysis split_features <- split_rast(biodiv_raster,                              depth_raster,                              breaks = c(0, -40, -200, -2000, -Inf),                              biodiv_df)  out_3D <- prioritize_3D(split_features = split_features,                         depth_raster = depth_raster,                         breaks = c(0, -40, -200, -2000, -Inf),                         biodiv_df = biodiv_df,                         budget_percents = seq(0, 1, 0.1),                         budget_weights = \"richness\",                         threads = parallel::detectCores(),                         portfolio = \"gap\",                         portfolio_opts = list(number_solutions = 10))  evaluate_3D(out_3D$solution3D$budget0.3, split_features) } # }"},{"path":"https://cadam00.github.io/prior3D/reference/get_biodiv_raster.html","id":null,"dir":"Reference","previous_headings":"","what":"Example biodiversity raster — get_biodiv_raster","title":"Example biodiversity raster — get_biodiv_raster","text":"Example biodiversity raster","code":""},{"path":"https://cadam00.github.io/prior3D/reference/get_biodiv_raster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example biodiversity raster — get_biodiv_raster","text":"","code":"get_biodiv_raster()"},{"path":"https://cadam00.github.io/prior3D/reference/get_biodiv_raster.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Example biodiversity raster — get_biodiv_raster","text":"Example input biodiv_raster used functions.","code":""},{"path":"https://cadam00.github.io/prior3D/reference/get_biodiv_raster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Example biodiversity raster — get_biodiv_raster","text":"SpatRaster object distribution features.","code":""},{"path":"https://cadam00.github.io/prior3D/reference/get_biodiv_raster.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Example biodiversity raster — get_biodiv_raster","text":"Kaschner, K., Kesner-Reyes, K., Garilao, C., Segschneider, J., Rius-Barile, J., Rees, T., & Froese, R. (2019). AquaMaps: Predicted range maps aquatic species. https://www.aquamaps.org","code":""},{"path":"https://cadam00.github.io/prior3D/reference/get_biodiv_raster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example biodiversity raster — get_biodiv_raster","text":"","code":"biodiv_raster <- get_biodiv_raster() terra::plot(biodiv_raster[[1:4]])"},{"path":"https://cadam00.github.io/prior3D/reference/get_depth_raster.html","id":null,"dir":"Reference","previous_headings":"","what":"Example depth raster — get_depth_raster","title":"Example depth raster — get_depth_raster","text":"Example depth raster","code":""},{"path":"https://cadam00.github.io/prior3D/reference/get_depth_raster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example depth raster — get_depth_raster","text":"","code":"get_depth_raster()"},{"path":"https://cadam00.github.io/prior3D/reference/get_depth_raster.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Example depth raster — get_depth_raster","text":"Example input depth_df object functions.","code":""},{"path":"https://cadam00.github.io/prior3D/reference/get_depth_raster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Example depth raster — get_depth_raster","text":"SpatRaster object depth levels Mediterranean.","code":""},{"path":"https://cadam00.github.io/prior3D/reference/get_depth_raster.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Example depth raster — get_depth_raster","text":"GEBCO Compilation Group. (2021). GEBCO 2021 Grid. doi:10.5285/c6612cbe-50b3-0cff-e053-6c86abc09f8f .","code":""},{"path":"https://cadam00.github.io/prior3D/reference/get_depth_raster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example depth raster — get_depth_raster","text":"","code":"depth_raster <- get_depth_raster() terra::plot(depth_raster)"},{"path":"https://cadam00.github.io/prior3D/reference/get_rast.html","id":null,"dir":"Reference","previous_headings":"","what":"Read multiple rast files — get_rast","title":"Read multiple rast files — get_rast","text":"Read multiple rast files contained folder path. Raster files must either .asc .tif extension.","code":""},{"path":"https://cadam00.github.io/prior3D/reference/get_rast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read multiple rast files — get_rast","text":"","code":"get_rast(path)"},{"path":"https://cadam00.github.io/prior3D/reference/get_rast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read multiple rast files — get_rast","text":"path Path string folder containing rast files.","code":""},{"path":"https://cadam00.github.io/prior3D/reference/get_rast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read multiple rast files — get_rast","text":"SpatRaster object.","code":""},{"path":"https://cadam00.github.io/prior3D/reference/get_rast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read multiple rast files — get_rast","text":"","code":"feature_folder <- system.file(\"get_rast_example\", package=\"prior3D\") get_rast(feature_folder) #> class       : SpatRaster  #> dimensions  : 31, 83, 2  (nrow, ncol, nlyr) #> resolution  : 0.5, 0.5  (x, y) #> extent      : -5.5, 36, 30.5, 46  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (EPSG:4326)  #> sources     : aaptos_aaptos.tif   #>               abietinaria_abietina.tif   #> names       : aaptos_aaptos, abietinaria_abietina  #> min values  :          0.01,                 0.01  #> max values  :          1.00,                 0.63"},{"path":"https://cadam00.github.io/prior3D/reference/plot_3D.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot output of prioritize_3D — plot_3D","title":"Plot output of prioritize_3D — plot_3D","text":"Plot summarized output prioritize_3D","code":""},{"path":"https://cadam00.github.io/prior3D/reference/plot_3D.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot output of prioritize_3D — plot_3D","text":"","code":"plot_3D(x, to_plot = \"all\", add_lines = TRUE)"},{"path":"https://cadam00.github.io/prior3D/reference/plot_3D.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot output of prioritize_3D — plot_3D","text":"x Output prioritize_3D. to_plot \"maps\", \"relative_held\" \"\". default \"\". See Details. add_lines TRUE, border lines maps::map ploted well.","code":""},{"path":"https://cadam00.github.io/prior3D/reference/plot_3D.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot output of prioritize_3D — plot_3D","text":"function plots summarized output prioritize_3D selected budgets. produced plot can contain information : \"maps\": produced maps normalized \\([0,1]\\) scale. \"relative_held\": percentage protection features per depth level. \"\": \"maps\" \"relative_held\".","code":""},{"path":"https://cadam00.github.io/prior3D/reference/plot_3D.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot output of prioritize_3D — plot_3D","text":"plot.","code":""},{"path":"https://cadam00.github.io/prior3D/reference/plot_3D.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Plot output of prioritize_3D — plot_3D","text":"Becker, R.., Wilks, .R., Brownrigg, R., & Minka, T.P. (2023). maps: Draw Geographical Maps. R package version 3.4.2,  https://CRAN.R-project.org/package=maps","code":""},{"path":[]},{"path":"https://cadam00.github.io/prior3D/reference/plot_3D.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot output of prioritize_3D — plot_3D","text":"","code":"if (FALSE) { # \\dontrun{ ## This example requires commercial solver from 'gurobi' package for ## portfolio = \"gap\". Else replace it with e.g. portfolio = \"shuffle\" for using ## a free solver like the one from 'highs' package.  biodiv_raster <- get_biodiv_raster() depth_raster <- get_depth_raster() data(biodiv_df)  # You can split features' 2D distributions into 3D ones and then run only 3D analysis split_features <- split_rast(biodiv_raster,                              depth_raster,                              breaks = c(0, -40, -200, -2000, -Inf),                              biodiv_df,                              val_depth_range=TRUE)  out_3D <- prioritize_3D(split_features = split_features,                         depth_raster = depth_raster,                         breaks = c(0, -40, -200, -2000, -Inf),                         biodiv_df = biodiv_df,                         priority_weights = NULL,#priority_weights,                         budget_percents = seq(0, 1, 0.1),                         budget_weights = \"equal\",                         penalty = 0,                         edge_factor = 0.5,                         gap = 0.1,                         threads = parallel::detectCores(),                         sep_priority_weights = \",\",                         portfolio = \"gap\",                         portfolio_opts = list(number_solutions = 10),                         sep_biodiv_df = \",\",                         locked_in_raster = NULL,                         locked_out_raster = NULL)  plot_3D(out_3D, to_plot=\"all\", add_lines=FALSE) plot_3D(out_3D, to_plot=\"all\", add_lines=TRUE) plot_3D(out_3D, to_plot=\"maps\", add_lines=TRUE) plot_3D(out_3D, to_plot=\"relative_held\", add_lines=TRUE) } # }"},{"path":"https://cadam00.github.io/prior3D/reference/plot_Compare_2D_3D.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot output of Compare_2D_3D — plot_Compare_2D_3D","title":"Plot output of Compare_2D_3D — plot_Compare_2D_3D","text":"Plot summarized output Compare_2D_3D","code":""},{"path":"https://cadam00.github.io/prior3D/reference/plot_Compare_2D_3D.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot output of Compare_2D_3D — plot_Compare_2D_3D","text":"","code":"plot_Compare_2D_3D(x, to_plot = \"all\", add_lines = TRUE)"},{"path":"https://cadam00.github.io/prior3D/reference/plot_Compare_2D_3D.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot output of Compare_2D_3D — plot_Compare_2D_3D","text":"x Output Compare_2D_3D. to_plot \"maps\", \"relative_held\" \"\". default \"\". See Details. add_lines TRUE, border lines maps::map ploted well.","code":""},{"path":"https://cadam00.github.io/prior3D/reference/plot_Compare_2D_3D.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot output of Compare_2D_3D — plot_Compare_2D_3D","text":"function plots summarized output Compare_2D_3D selected budgets. produced plot can contain information : \"maps\": produced maps normalized \\([0,1]\\) scale. \"relative_held\": percentage protection features per depth level. \"\": \"maps\" \"relative_held\".","code":""},{"path":"https://cadam00.github.io/prior3D/reference/plot_Compare_2D_3D.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot output of Compare_2D_3D — plot_Compare_2D_3D","text":"plot.","code":""},{"path":"https://cadam00.github.io/prior3D/reference/plot_Compare_2D_3D.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Plot output of Compare_2D_3D — plot_Compare_2D_3D","text":"Becker, R. ., Wilks, . R., Brownrigg, R., & Minka, T. P. (2023). maps: Draw Geographical Maps. R package version 3.4.2,  https://CRAN.R-project.org/package=maps","code":""},{"path":[]},{"path":"https://cadam00.github.io/prior3D/reference/plot_Compare_2D_3D.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot output of Compare_2D_3D — plot_Compare_2D_3D","text":"","code":"if (FALSE) { # \\dontrun{ ## This example requires commercial solver from 'gurobi' package for ## portfolio = \"gap\". Else replace it with e.g. portfolio = \"shuffle\" for using ## a free solver like the one from 'highs' package.  biodiv_raster <- get_biodiv_raster() depth_raster <- get_depth_raster() data(biodiv_df)  out_2D_3D <- Compare_2D_3D(biodiv_raster = biodiv_raster,                            depth_raster = depth_raster,                            breaks = c(0, -40, -200, -2000, -Inf),                            biodiv_df = biodiv_df,                            budget_percents = seq(0, 1, 0.1),                            budget_weights = \"richness\",                            threads = parallel::detectCores(),                            portfolio = \"gap\",                            portfolio_opts = list(number_solutions = 10))  plot_Compare_2D_3D(out_2D_3D, to_plot=\"all\", add_lines=FALSE) plot_Compare_2D_3D(out_2D_3D, to_plot=\"all\", add_lines=TRUE) plot_Compare_2D_3D(out_2D_3D, to_plot=\"maps\", add_lines=TRUE) plot_Compare_2D_3D(out_2D_3D, to_plot=\"relative_held\", add_lines=TRUE) } # }"},{"path":"https://cadam00.github.io/prior3D/reference/plot_sumrast.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot sum list of SpatRaster objects. — plot_sumrast","title":"Plot sum list of SpatRaster objects. — plot_sumrast","text":"Plot sum list SpatRaster objects.","code":""},{"path":"https://cadam00.github.io/prior3D/reference/plot_sumrast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot sum list of SpatRaster objects. — plot_sumrast","text":"","code":"plot_sumrast(x, normalize = TRUE, add_lines = TRUE, ...)"},{"path":"https://cadam00.github.io/prior3D/reference/plot_sumrast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot sum list of SpatRaster objects. — plot_sumrast","text":"x List SpatRaster objects. normalize TRUE, sum solutions normalized \\([0,1]\\) scale. add_lines TRUE, border lines maps::map ploted well. ... arguments passed terra::plot","code":""},{"path":"https://cadam00.github.io/prior3D/reference/plot_sumrast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot sum list of SpatRaster objects. — plot_sumrast","text":"plot.","code":""},{"path":[]},{"path":"https://cadam00.github.io/prior3D/reference/plot_sumrast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot sum list of SpatRaster objects. — plot_sumrast","text":"","code":"set.seed(42) x <- terra::rast(matrix(rbinom(100, 1, 0.2), nrow=10)) y <- terra::rast(matrix(rbinom(100, 1, 0.8), nrow=10)) plot_sumrast(list(x, y), add_lines = FALSE)"},{"path":"https://cadam00.github.io/prior3D/reference/prioritize_3D.html","id":null,"dir":"Reference","previous_headings":"","what":"3D prioritization algorithm — prioritize_3D","title":"3D prioritization algorithm — prioritize_3D","text":"3D prioritization algorithm","code":""},{"path":"https://cadam00.github.io/prior3D/reference/prioritize_3D.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"3D prioritization algorithm — prioritize_3D","text":"","code":"prioritize_3D(split_features, depth_raster, breaks, biodiv_df, priority_weights = NULL, budget_percents = seq(0,1,0.1), budget_weights = \"equal\", penalty = 0, edge_factor = 0.5, gap = 0.1, threads = 1L, sep_priority_weights = \",\", portfolio = \"gap\", portfolio_opts = list(number_solutions = 10, pool_gap = 0.1), sep_biodiv_df = \",\", locked_in_raster = NULL, locked_out_raster = NULL, verbose = FALSE)"},{"path":"https://cadam00.github.io/prior3D/reference/prioritize_3D.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"3D prioritization algorithm — prioritize_3D","text":"split_features list SpatRaster objects representing depth zones, element corresponds different depth level, ranging surface bottom sea. function uses output split_rast function, multilevel (3D) distribution data conform structure also acceptable. First list element corresponds shallowest distribution last list element deepest one. depth_raster SpatRaster object file path elevation/bathymetric map. breaks Numeric vector defining range depth layers use. biodiv_df data.frame file path (CSV, TXT, XLS, XLSX) containing additional information biodiversity features. priority_weights data.frame object file path (CSV, TXT, XLS, XLSX) containing group names biodiversity features first column corresponding group weights second column. data.frame attributes distinct prioritization weights different biodiversity features groups features. budget_percents Numeric value \\([0,1]\\) vector containing budget percentages use. default seq(0,1,0.1). budget_weights Numeric weight vector budget_percents allocation among depth levels. Otherwise can string one choices \"equal\", \"area\" \"richness\". Alternatively, can numerical vector custom weights corresponding depth layer, first value corresponds surface last one corresponds bottom sea. weights normalized sum exceeds 1. specified, equal distribution budget among depth levels used, default. penalty single numeric penalty applied depth zone, defined theprioritizr::add_boundary_penalties. edge_factor single numeric edge factor applied depth zone, defined theprioritizr::add_boundary_penalties. gap optimality gap solver, defined prioritizr package. default gap 0.1. threads number solver threads used. default 1. sep_priority_weights Separator used priority_weights file, priority_weights path format. portfolio portfolio used, choosing \"extra\", \"gap\", \"cuts\" \"shuffle\" portfolios. default \"gap\". portfolio=\"\" indicates portfolio used. portfolios see prioritizr. portfolio_opts prioritizr portfolio options used. sep_biodiv_df Separator used biodiv_df file, biodiv_df path format. locked_in_raster optional locked_in_raster SpatRaster used. Note areas considered zero-cost. locked_out_raster optional locked_out_raster SpatRaster used. Note areas excluded solution. verbose verbose = TRUE, solver messages printed well. default FALSE.","code":""},{"path":"https://cadam00.github.io/prior3D/reference/prioritize_3D.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"3D prioritization algorithm — prioritize_3D","text":"function used generate prioritization maps. Single budget settings (ex. total_budget = 0.3) produce standard maps, typical Marxan outputs. Multiple budgets, using vector (ex. c(0.1,0.3,0.5), result cumulative (frequency) maps, illustrating areas selected various budget levels. Although output follows different approach, resembles typical Zonation output maps. main reason biodiv_df defining prioritization weights features. package weights defined per group features (needed). biodiv_df mandatory column names (names ignored): \"species_name\": Mandatory column feature names, must split_rast. \"group\": Mandatory column group weights names. Except biodiv_df, additional data.frame object can also used, named priority_weights. used, data.frame object must two columns: \"group\": Mandatory column group weights names. \"weight\": Mandatory column group weights. case feature weights desired, biodiv_df priority_weights can kept NULL. breaks must correspondence depth_raster file. example, depth_raster range \\([10, -3000]\\), breaks vector c(0,-40,-200,-2000,-Inf) create depth levels \\([0,-40],\\\\(-40,-200], (-200, -2000], (-2000, -\\infty)\\) set NA cells values greater \\(10\\). budget_percents: Budget reflects desired level protection modeled. ranges 0 1, 0 indicating resources available protection, 1 signifies resources sufficient protect entire study area. Typically, setting budget 0.3 corresponds 30% conservation target (.e. 30% total area set aside conservation). Users also flexibility define multiple budget levels using vector, allowing exploration various protection scenarios. instance, vector like c(0.1, 0.3, 0.5) represents three scenarios 10%, 30%, 50% study area designated protection. budget_weights: prioritize_3D function allows users specify budget distributed among depth levels. Three allocation methods available: Equal Distribution: Allocates equal share budget depth level (budget_weights = \"equal\"). Proportional Area: Allocates budget based spatial extent depth level (budget_weights = \"area\"). Proportional Species Richness: Prioritizes budget allocation depth levels higher species diversity (number species) (budget_weights = \"richness\"). Otherwise, can numeric vector length equal number depth levels, number indicates budget share per depth level. solver used solving prioritization problems best available computer, following solver hierarchy prioritizr.","code":""},{"path":"https://cadam00.github.io/prior3D/reference/prioritize_3D.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"3D prioritization algorithm — prioritize_3D","text":"list containing following objects (non-referenced identical input ones): solution3D: list 3D solution per budget percentage absolute_held3D: absolute_held 3D solutions (see evaluate_3D) overall_held3D: overall_held 3D solutions (see evaluate_3D) relative_helds3D: relative_held 3D solutions (see evaluate_3D) mean_overall_helds3D: base::mean overall_held 3D solution (see evaluate_3D) per budget sd_overall_helds3D: base::mean overall_held 3D solution (see evaluate_3D) per budget depth_overall_available3D: depth_overall_available 3D solutions (see evaluate_3D)","code":""},{"path":"https://cadam00.github.io/prior3D/reference/prioritize_3D.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"3D prioritization algorithm — prioritize_3D","text":"Hanson, Jeffrey O, Richard Schuster, Nina Morrell, Matthew Strimas-Mackey, Brandon P M Edwards, Matthew E Watts, Peter Arcese, Joseph Bennett, Hugh P Possingham. 2024. prioritizr: Systematic Conservation Prioritization R.  https://prioritizr.net. Lehtomäki, Joona (2016). Comparing prioritization methods, 21 June. Available :  https://rpubs.com/jlehtoma/priocomp (Accessed 1 June 2024).","code":""},{"path":[]},{"path":"https://cadam00.github.io/prior3D/reference/prioritize_3D.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"3D prioritization algorithm — prioritize_3D","text":"","code":"if (FALSE) { # \\dontrun{ ## This example requires commercial solver from 'gurobi' package for ## portfolio = \"gap\". Else replace it with e.g. portfolio = \"shuffle\" for using ## a free solver like the one from 'highs' package.  biodiv_raster <- get_biodiv_raster() depth_raster <- get_depth_raster() data(biodiv_df)  # You can split features' 2D distributions into 3D ones and then run only 3D analysis split_features <- split_rast(biodiv_raster,                              depth_raster,                              breaks = c(0, -40, -200, -2000, -Inf),                              biodiv_df)  out_3D <- prioritize_3D(split_features = split_features,                         depth_raster = depth_raster,                         breaks = c(0, -40, -200, -2000, -Inf),                         biodiv_df = biodiv_df,                         budget_percents = seq(0, 1, 0.1),                         budget_weights = \"richness\",                         threads = parallel::detectCores(),                         portfolio = \"gap\",                         portfolio_opts = list(number_solutions = 10))  plot_3D(out_3D, to_plot=\"all\", add_lines=TRUE)  # Arbitrary random weights priority_weights <- data.frame(c(\"A\", \"B\", \"C\"), c(0.001, 1000, 1)) names(priority_weights) <- c(\"group\", \"weight\") biodiv_df$group <- rep(c(\"A\", \"B\", \"C\"), length.out=20) out_3D <- prioritize_3D(split_features = split_features,                         depth_raster = depth_raster,                         biodiv_df = biodiv_df,                         priority_weights = priority_weights,                         breaks = c(0, -40, -200, -2000, -Inf),                         budget_percents = seq(0, 1, 0.1),                         budget_weights = \"richness\",                         threads = parallel::detectCores(),                         portfolio = \"gap\",                         portfolio_opts = list(number_solutions = 10))  plot_3D(out_3D, to_plot=\"all\", add_lines=TRUE) } # }"},{"path":"https://cadam00.github.io/prior3D/reference/split_rast.html","id":null,"dir":"Reference","previous_headings":"","what":"Split 2D feature distributions into 3D ones — split_rast","title":"Split 2D feature distributions into 3D ones — split_rast","text":"Split 2D feature distributions 3D ones","code":""},{"path":"https://cadam00.github.io/prior3D/reference/split_rast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split 2D feature distributions into 3D ones — split_rast","text":"","code":"split_rast(biodiv_raster, depth_raster, breaks, biodiv_df, val_depth_range=TRUE, sep_biodiv_df=\",\")"},{"path":"https://cadam00.github.io/prior3D/reference/split_rast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split 2D feature distributions into 3D ones — split_rast","text":"biodiv_raster SpatRaster object folder path 2D feature distributions layers. depth_raster SpatRaster object file path elevation/bathymetric map. breaks Numeric vector defining range depth layers use. biodiv_df data.frame file path (CSV, TXT, XLS, XLSX) containing additional information biodiversity features. val_depth_range correction splitted 3D distributions based depth range biodiversity features (\"min_z\" \"max_z\" biodiv_df) needed. sep_biodiv_df separator used biodiv_df file, biodiv_df path format.","code":""},{"path":"https://cadam00.github.io/prior3D/reference/split_rast.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Split 2D feature distributions into 3D ones — split_rast","text":"function used convert 2D distributions biodiversity features (rasters) 3D format. biodiv_df can following column names (independently order names ignored): \"species_name\": Mandatory column feature names, must biodiv_raster. \"pelagic\": Mandatory column features' behaviour. TRUE means feature pelagic FALSE means feature benthic. \"min_z\": Optional column minimum vertical range features. NA values translated unlimited upward feature movement. \"max_z\": Optional column maximum vertical range features. NA values translated unlimited downward feature movement. breaks must correspondence depth_raster file. example, depth_raster range \\([10, -3000]\\), breaks vector c(0,-40,-200,-2000,-Inf) create depth levels \\([0,-40],\\\\ (-40,200], (-200, -2000], (-2000, -\\infty)\\) set NA cells values greater \\(0\\). val_depth_range = TRUE (default), correction done depth range biodiversity features derived corresponding feature distribution raster \"min_z\" \"max_z\" ignored. val_depth_range = FALSE, function uses minimum maximum depth information provided biodiv_df, remove feature occurrences outside expected range.","code":""},{"path":"https://cadam00.github.io/prior3D/reference/split_rast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split 2D feature distributions into 3D ones — split_rast","text":"list containing species distributions bathymetric layer, necessary 3D analysis. List names indicating depth levels.","code":""},{"path":"https://cadam00.github.io/prior3D/reference/split_rast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split 2D feature distributions into 3D ones — split_rast","text":"","code":"biodiv_raster <- get_biodiv_raster() depth_raster <- get_depth_raster() data(biodiv_df)  # You can split features' 2D distributions into 3D ones and then run only 3D analysis split_features <- split_rast(biodiv_raster,                              depth_raster,                              breaks = c(0, -40, -200, -2000, -Inf),                              biodiv_df)"},{"path":"https://cadam00.github.io/prior3D/reference/sumrast.html","id":null,"dir":"Reference","previous_headings":"","what":"Sum list of SpatRaster objects. — sumrast","title":"Sum list of SpatRaster objects. — sumrast","text":"Sum list SpatRaster objects.","code":""},{"path":"https://cadam00.github.io/prior3D/reference/sumrast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sum list of SpatRaster objects. — sumrast","text":"","code":"sumrast(x, normalize = TRUE)"},{"path":"https://cadam00.github.io/prior3D/reference/sumrast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sum list of SpatRaster objects. — sumrast","text":"x List SpatRaster objects. normalize TRUE, sum solutions normalized \\([0,1]\\) scale.","code":""},{"path":"https://cadam00.github.io/prior3D/reference/sumrast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sum list of SpatRaster objects. — sumrast","text":"SpatRaster object.","code":""},{"path":[]},{"path":"https://cadam00.github.io/prior3D/reference/sumrast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sum list of SpatRaster objects. — sumrast","text":"","code":"set.seed(42) x <- terra::rast(matrix(rbinom(100, 1, 0.2), nrow=10)) y <- terra::rast(matrix(rbinom(100, 1, 0.8), nrow=10)) sumrast(list(x, y)) #> class       : SpatRaster  #> dimensions  : 10, 10, 1  (nrow, ncol, nlyr) #> resolution  : 1, 1  (x, y) #> extent      : 0, 10, 0, 10  (xmin, xmax, ymin, ymax) #> coord. ref. :   #> source(s)   : memory #> name        : sum  #> min value   :   0  #> max value   :   1"},{"path":"https://cadam00.github.io/prior3D/reference/terra_jaccard.html","id":null,"dir":"Reference","previous_headings":"","what":"Jaccard similarity coefficient among two SpatRaster objects — terra_jaccard","title":"Jaccard similarity coefficient among two SpatRaster objects — terra_jaccard","text":"Jaccard coefficient among two SpatRaster objects","code":""},{"path":"https://cadam00.github.io/prior3D/reference/terra_jaccard.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Jaccard similarity coefficient among two SpatRaster objects — terra_jaccard","text":"","code":"terra_jaccard(x, y)"},{"path":"https://cadam00.github.io/prior3D/reference/terra_jaccard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Jaccard similarity coefficient among two SpatRaster objects — terra_jaccard","text":"x SpatRaster object binary values. y SpatRaster object binary values.","code":""},{"path":"https://cadam00.github.io/prior3D/reference/terra_jaccard.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Jaccard similarity coefficient among two SpatRaster objects — terra_jaccard","text":"Jaccard similarity coefficient evaluates percentage number equal intersection two sets, divided size union sets.","code":""},{"path":"https://cadam00.github.io/prior3D/reference/terra_jaccard.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Jaccard similarity coefficient among two SpatRaster objects — terra_jaccard","text":"numeric value \\([0,1]\\).","code":""},{"path":"https://cadam00.github.io/prior3D/reference/terra_jaccard.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Jaccard similarity coefficient among two SpatRaster objects — terra_jaccard","text":"","code":"set.seed(42) x <- terra::rast(matrix(rbinom(100, 1, 0.2), nrow=10)) y <- terra::rast(matrix(rbinom(100, 1, 0.8), nrow=10)) terra_jaccard(x, y) #> [1] 0.2470588"},{"path":[]},{"path":"https://cadam00.github.io/prior3D/news/index.html","id":"minor-changes-0-1-1","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"prior3D 0.1.1","text":"Update README.md badges text. Use rev(terrain.colors(255)) plots. Create pkgdown website.","code":""},{"path":"https://cadam00.github.io/prior3D/news/index.html","id":"prior3d-010","dir":"Changelog","previous_headings":"","what":"prior3D 0.1.0","title":"prior3D 0.1.0","text":"CRAN release: 2024-08-23","code":""},{"path":"https://cadam00.github.io/prior3D/news/index.html","id":"major-changes-0-1-0","dir":"Changelog","previous_headings":"","what":"Major changes","title":"prior3D 0.1.0","text":"Initial package version.","code":""}]
